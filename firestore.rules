
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and write their own profile.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for ads
    match /ads/{adId} {
      allow read: if true;
      allow create: if request.auth != null;

      // Update is allowed under two conditions, joined by an OR:
      // 1. The user is the owner and is editing the ad content.
      // 2. Any logged-in user is liking/unliking the ad.
      allow update: if
        // Condition 1: Owner is editing.
        // They must be the owner of the document.
        (request.auth.uid == resource.data.userId &&
          // They can only change the fields defined here.
          // This prevents them from changing their own like count or other immutable data.
          request.resource.data.keys().diff(resource.data.keys()).hasOnly(['title', 'category', 'description', 'city', 'price', 'workType']))
        ||
        // Condition 2: Any user is liking/unliking.
        // They must be logged in.
        (request.auth != null &&
          // They can ONLY change the 'likes' and 'likedBy' fields.
          request.resource.data.keys().diff(resource.data.keys()).hasOnly(['likes', 'likedBy']));
    }
  }
}
